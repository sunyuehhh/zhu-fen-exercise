{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar React = require('react');\nvar React__default = _interopDefault(React);\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nvar CacheContext = /*#__PURE__*/React__default.createContext();\nvar CREATE = 'CREATE'; //创建\n\nvar CREATED = 'CREATED'; //创建成功\n\nvar ACTIVE = 'ACTIVE'; //激活\n\nvar DESTROY = 'DESTROY'; //销毁\n\nfunction cacheReducer() {\n  var cacheStates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n    type = _ref.type,\n    payload = _ref.payload;\n  switch (type) {\n    case CREATE:\n      return _objectSpread2(_objectSpread2({}, cacheStates), {}, _defineProperty({}, payload.cacheId, {\n        scrolls: {},\n        cacheId: payload.cacheId,\n        element: payload.element,\n        status: CREATE\n      }));\n    case CREATED:\n      return _objectSpread2(_objectSpread2({}, cacheStates), {}, _defineProperty({}, payload.cacheId, _objectSpread2(_objectSpread2({}, cacheStates[payload.cacheId]), {}, {\n        doms: payload.doms,\n        status: CREATED\n      })));\n    case ACTIVE:\n      return _objectSpread2(_objectSpread2({}, cacheStates), {}, _defineProperty({}, payload.cacheId, _objectSpread2(_objectSpread2({}, cacheStates[payload.cacheId]), {}, {\n        status: ACTIVE\n      })));\n    case DESTROY:\n      return _objectSpread2(_objectSpread2({}, cacheStates), {}, _defineProperty({}, payload.cacheId, _objectSpread2(_objectSpread2({}, cacheStates[payload.cacheId]), {}, {\n        status: DESTROY\n      })));\n    default:\n      return cacheStates;\n  }\n}\nfunction KeepAliveProvider(props) {\n  var _useReducer = React.useReducer(cacheReducer, {}),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    cacheStates = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var mount = React.useCallback(function (_ref) {\n    var cacheId = _ref.cacheId,\n      element = _ref.element;\n    if (cacheStates[cacheId]) {\n      var cacheState = cacheStates[cacheId];\n      if (cacheState.status === DESTROY) {\n        var doms = cacheState.doms;\n        doms.forEach(function (dom) {\n          return dom.parentNode.removeChild(dom);\n        });\n        dispatch({\n          type: CREATE,\n          payload: {\n            cacheId: cacheId,\n            element: element\n          }\n        });\n      }\n    } else {\n      dispatch({\n        type: CREATE,\n        payload: {\n          cacheId: cacheId,\n          element: element\n        }\n      });\n    }\n  }, [cacheStates]);\n  var handleScroll = React.useCallback(function (cacheId, _ref2) {\n    var target = _ref2.target;\n    if (cacheStates[cacheId]) {\n      var scrolls = cacheStates[cacheId].scrolls;\n      scrolls[target] = target.scrollTop;\n    }\n  }, [cacheStates]);\n  return /*#__PURE__*/React__default.createElement(CacheContext.Provider, {\n    value: {\n      mount: mount,\n      cacheStates: cacheStates,\n      dispatch: dispatch,\n      handleScroll: handleScroll\n    }\n  }, props.children, Object.values(cacheStates).filter(function (cacheState) {\n    return cacheState.status !== DESTROY;\n  }).map(function (_ref3) {\n    var cacheId = _ref3.cacheId,\n      element = _ref3.element;\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      id: \"cache_\".concat(cacheId),\n      key: cacheId,\n      ref: function ref(dom) {\n        var cacheState = cacheStates[cacheId];\n        if (dom && (!cacheState.doms || cacheState.status === DESTROY)) {\n          var doms = Array.from(dom.childNodes);\n          dispatch({\n            type: CREATED,\n            payload: {\n              cacheId: cacheId,\n              doms: doms\n            }\n          });\n        }\n      }\n    }, element);\n  }));\n}\nfunction withKeepAlive(OldComponent, _ref) {\n  var _ref$cacheId = _ref.cacheId,\n    cacheId = _ref$cacheId === void 0 ? window.location.pathname : _ref$cacheId,\n    _ref$scroll = _ref.scroll,\n    scroll = _ref$scroll === void 0 ? false : _ref$scroll;\n  return function (props) {\n    var _useContext = React.useContext(CacheContext),\n      mount = _useContext.mount,\n      cacheStates = _useContext.cacheStates,\n      dispatch = _useContext.dispatch,\n      handleScroll = _useContext.handleScroll;\n    var ref = React.useRef(null);\n    React.useEffect(function () {\n      if (scroll) {\n        ref.current.addEventListener('scroll', handleScroll.bind(null, cacheId), true);\n      }\n    }, [handleScroll]);\n    React.useEffect(function () {\n      var cacheState = cacheStates[cacheId];\n      if (cacheState && cacheState.doms && cacheState.status !== DESTROY) {\n        var doms = cacheState.doms;\n        doms.forEach(function (dom) {\n          return ref.current.appendChild(dom);\n        });\n        if (scroll) {\n          doms.forEach(function (dom) {\n            if (cacheState.scrolls[dom]) dom.scrollTop = cacheState.scrolls[dom];\n          });\n        }\n      } else {\n        mount({\n          cacheId: cacheId,\n          element: /*#__PURE__*/React__default.createElement(OldComponent, _extends({}, props, {\n            dispatch: dispatch\n          }))\n        });\n      }\n    }, [cacheStates, dispatch, mount, props]);\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      id: \"keepalive_\".concat(cacheId),\n      ref: ref\n    });\n  };\n}\nexports.KeepAliveProvider = KeepAliveProvider;\nexports.withKeepAlive = withKeepAlive;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}