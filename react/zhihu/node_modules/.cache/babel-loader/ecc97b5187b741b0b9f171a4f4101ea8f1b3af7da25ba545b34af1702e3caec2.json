{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useMemo } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useRequest from '../useRequest';\nvar usePagination = function usePagination(service, options) {\n  var _a;\n  if (options === void 0) {\n    options = {};\n  }\n  var _b = options.defaultPageSize,\n    defaultPageSize = _b === void 0 ? 10 : _b,\n    _c = options.defaultCurrent,\n    defaultCurrent = _c === void 0 ? 1 : _c,\n    rest = __rest(options, [\"defaultPageSize\", \"defaultCurrent\"]);\n  var result = useRequest(service, __assign({\n    defaultParams: [{\n      current: defaultCurrent,\n      pageSize: defaultPageSize\n    }],\n    refreshDepsAction: function refreshDepsAction() {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      changeCurrent(1);\n    }\n  }, rest));\n  var _d = result.params[0] || {},\n    _e = _d.current,\n    current = _e === void 0 ? 1 : _e,\n    _f = _d.pageSize,\n    pageSize = _f === void 0 ? defaultPageSize : _f;\n  var total = ((_a = result.data) === null || _a === void 0 ? void 0 : _a.total) || 0;\n  var totalPage = useMemo(function () {\n    return Math.ceil(total / pageSize);\n  }, [pageSize, total]);\n  var onChange = function onChange(c, p) {\n    var toCurrent = c <= 0 ? 1 : c;\n    var toPageSize = p <= 0 ? 1 : p;\n    var tempTotalPage = Math.ceil(total / toPageSize);\n    if (toCurrent > tempTotalPage) {\n      toCurrent = Math.max(1, tempTotalPage);\n    }\n    var _a = __read(result.params || []),\n      _b = _a[0],\n      oldPaginationParams = _b === void 0 ? {} : _b,\n      restParams = _a.slice(1);\n    result.run.apply(result, __spreadArray([__assign(__assign({}, oldPaginationParams), {\n      current: toCurrent,\n      pageSize: toPageSize\n    })], __read(restParams), false));\n  };\n  var changeCurrent = function changeCurrent(c) {\n    onChange(c, pageSize);\n  };\n  var changePageSize = function changePageSize(p) {\n    onChange(current, p);\n  };\n  return __assign(__assign({}, result), {\n    pagination: {\n      current: current,\n      pageSize: pageSize,\n      total: total,\n      totalPage: totalPage,\n      onChange: useMemoizedFn(onChange),\n      changeCurrent: useMemoizedFn(changeCurrent),\n      changePageSize: useMemoizedFn(changePageSize)\n    }\n  });\n};\nexport default usePagination;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}