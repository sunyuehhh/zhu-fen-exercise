{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useEffect, useState } from 'react';\nimport useDebounceFn from '../useDebounceFn';\nimport useUpdateEffect from '../useUpdateEffect';\nfunction useDebounceEffect(effect, deps, options) {\n  var _a = __read(useState({}), 2),\n    flag = _a[0],\n    setFlag = _a[1];\n  var run = useDebounceFn(function () {\n    setFlag({});\n  }, options).run;\n  useEffect(function () {\n    return run();\n  }, deps);\n  useUpdateEffect(effect, [flag]);\n}\nexport default useDebounceEffect;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}