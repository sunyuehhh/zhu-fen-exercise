{"ast":null,"code":"import _ from '../assets/utils';\nimport qs from 'qs';\nimport { Toast } from 'antd-mobile';\n\n/* 核心方法 */\nconst http = function http(config) {\n  // initial config & validate\n  if (!_.isPlainObject(config)) config = {};\n  config = Object.assign({\n    url: '',\n    method: 'GET',\n    credentials: 'include',\n    headers: null,\n    body: null,\n    params: null,\n    responseType: 'json',\n    signal: null\n  }, config);\n  if (!config.url) throw new TypeError('url must be required');\n  if (!_.isPlainObject(config.headers)) config.headers = {};\n  if (config.params !== null && !_.isPlainObject(config.params)) config.params = null;\n  let {\n    url,\n    method,\n    credentials,\n    headers,\n    body,\n    params,\n    responseType,\n    signal\n  } = config;\n  if (params) {\n    url += `${url.includes('?') ? '&' : '?'}${qs.stringify(params)}`;\n  }\n  if (_.isPlainObject(body)) {\n    body = qs.stringify(body);\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  }\n\n  // 处理Token\n  let token = _.storage.get('tk'),\n    safeList = ['/user_info', '/user_update', '/store', '/store_remove', '/store_list'];\n  if (token) {\n    let reg = /\\/api(\\/[^?#]+)/,\n      [, $1] = reg.exec(url) || [];\n    let isSafe = safeList.some(item => {\n      return $1 === item;\n    });\n    if (isSafe) headers['authorization'] = token;\n  }\n\n  // send\n  method = method.toUpperCase();\n  config = {\n    method,\n    credentials,\n    headers,\n    cache: 'no-cache',\n    signal\n  };\n  if (/^(POST|PUT|PATCH)$/i.test(method) && body) config.body = body;\n  return fetch(url, config).then(response => {\n    let {\n      status,\n      statusText\n    } = response;\n    if (/^(2|3)\\d{2}$/.test(status)) {\n      let result;\n      switch (responseType.toLowerCase()) {\n        case 'text':\n          result = response.text();\n          break;\n        case 'arraybuffer':\n          result = response.arrayBuffer();\n          break;\n        case 'blob':\n          result = response.blob();\n          break;\n        default:\n          result = response.json();\n      }\n      return result;\n    }\n    return Promise.reject({\n      code: -100,\n      status,\n      statusText\n    });\n  }).catch(reason => {\n    Toast.show({\n      icon: 'fail',\n      content: '网络繁忙,请稍后再试!'\n    });\n    return Promise.reject(reason);\n  });\n};\n\n/* 快捷方法 */\n[\"GET\", \"HEAD\", \"DELETE\", \"OPTIONS\"].forEach(item => {\n  http[item.toLowerCase()] = function (url, config) {\n    if (!_.isPlainObject(config)) config = {};\n    config['url'] = url;\n    config['method'] = item;\n    return http(config);\n  };\n});\n[\"POST\", \"PUT\", \"PATCH\"].forEach(item => {\n  http[item.toLowerCase()] = function (url, body, config) {\n    if (!_.isPlainObject(config)) config = {};\n    config['url'] = url;\n    config['method'] = item;\n    config['body'] = body;\n    return http(config);\n  };\n});\nexport default http;","map":{"version":3,"names":["_","qs","Toast","http","config","isPlainObject","Object","assign","url","method","credentials","headers","body","params","responseType","signal","TypeError","includes","stringify","token","storage","get","safeList","reg","$1","exec","isSafe","some","item","toUpperCase","cache","test","fetch","then","response","status","statusText","result","toLowerCase","text","arrayBuffer","blob","json","Promise","reject","code","catch","reason","show","icon","content","forEach"],"sources":["D:/xuexishipin/exercise/zhu-fen-exercise/react/zhihu/src/api/http.js"],"sourcesContent":["import _ from '../assets/utils';\nimport qs from 'qs';\nimport { Toast } from 'antd-mobile';\n\n/* 核心方法 */\nconst http = function http(config) {\n  // initial config & validate\n  if (!_.isPlainObject(config)) config = {};\n  config = Object.assign({\n    url: '',\n    method: 'GET',\n    credentials: 'include',\n    headers: null,\n    body: null,\n    params: null,\n    responseType: 'json',\n    signal: null\n  }, config);\n  if (!config.url) throw new TypeError('url must be required');\n  if (!_.isPlainObject(config.headers)) config.headers = {};\n  if (config.params !== null && !_.isPlainObject(config.params)) config.params = null;\n\n  let { url, method, credentials, headers, body, params, responseType, signal } = config;\n  if (params) {\n    url += `${url.includes('?') ? '&' : '?'}${qs.stringify(params)}`;\n  }\n  if (_.isPlainObject(body)) {\n    body = qs.stringify(body);\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  }\n\n  // 处理Token\n  let token = _.storage.get('tk'),\n    safeList = ['/user_info', '/user_update', '/store', '/store_remove', '/store_list'];\n  if (token) {\n    let reg = /\\/api(\\/[^?#]+)/,\n      [, $1] = reg.exec(url) || [];\n    let isSafe = safeList.some(item => {\n      return $1 === item;\n    });\n    if (isSafe) headers['authorization'] = token;\n  }\n\n  // send\n  method = method.toUpperCase();\n  config = {\n    method,\n    credentials,\n    headers,\n    cache: 'no-cache',\n    signal\n  };\n  if (/^(POST|PUT|PATCH)$/i.test(method) && body) config.body = body;\n  return fetch(url, config)\n    .then(response => {\n      let { status, statusText } = response;\n      if (/^(2|3)\\d{2}$/.test(status)) {\n        let result;\n        switch (responseType.toLowerCase()) {\n          case 'text':\n            result = response.text();\n            break;\n          case 'arraybuffer':\n            result = response.arrayBuffer();\n            break;\n          case 'blob':\n            result = response.blob();\n            break;\n          default:\n            result = response.json();\n        }\n        return result;\n      }\n      return Promise.reject({\n        code: -100,\n        status,\n        statusText\n      });\n    })\n    .catch(reason => {\n      Toast.show({\n        icon: 'fail',\n        content: '网络繁忙,请稍后再试!'\n      });\n      return Promise.reject(reason);\n    });\n};\n\n/* 快捷方法 */\n[\"GET\", \"HEAD\", \"DELETE\", \"OPTIONS\"].forEach(item => {\n  http[item.toLowerCase()] = function (url, config) {\n    if (!_.isPlainObject(config)) config = {};\n    config['url'] = url;\n    config['method'] = item;\n    return http(config);\n  };\n});\n[\"POST\", \"PUT\", \"PATCH\"].forEach(item => {\n  http[item.toLowerCase()] = function (url, body, config) {\n    if (!_.isPlainObject(config)) config = {};\n    config['url'] = url;\n    config['method'] = item;\n    config['body'] = body;\n    return http(config);\n  };\n});\n\nexport default http;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}