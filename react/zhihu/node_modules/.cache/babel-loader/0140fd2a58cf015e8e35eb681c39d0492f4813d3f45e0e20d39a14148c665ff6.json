{"ast":null,"code":"import useLatest from '../useLatest';\nimport { getTargetElement } from '../utils/domTarget';\nimport useEffectWithTarget from '../utils/useEffectWithTarget';\nfunction useEventListener(eventName, handler, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var handlerRef = useLatest(handler);\n  useEffectWithTarget(function () {\n    var targetElement = getTargetElement(options.target, window);\n    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {\n      return;\n    }\n    var eventListener = function eventListener(event) {\n      return handlerRef.current(event);\n    };\n    targetElement.addEventListener(eventName, eventListener, {\n      capture: options.capture,\n      once: options.once,\n      passive: options.passive\n    });\n    return function () {\n      targetElement.removeEventListener(eventName, eventListener, {\n        capture: options.capture\n      });\n    };\n  }, [eventName, options.capture, options.once, options.passive], options.target);\n}\nexport default useEventListener;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}