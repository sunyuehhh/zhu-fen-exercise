{"ast":null,"code":"import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nfunction useInterval(fn, delay, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var immediate = options.immediate;\n  var fnRef = useLatest(fn);\n  var timerRef = useRef(null);\n  useEffect(function () {\n    if (!isNumber(delay) || delay < 0) {\n      return;\n    }\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setInterval(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  var clear = useCallback(function () {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useInterval;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}