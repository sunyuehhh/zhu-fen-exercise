{"ast":null,"code":"var _jsxFileName = \"D:\\\\xuexishipin\\\\exercise\\\\zhu-fen-exercise\\\\react\\\\zhihu\\\\src\\\\router\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense, useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate, useLocation, useParams, useSearchParams } from 'react-router-dom';\nimport routes from \"./routes\";\nimport { Mask, DotLoading, Toast } from 'antd-mobile';\nimport store from '../store';\nimport action from \"../store/action\";\n\n/* 统一路由配置 */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst isCheckLogin = path => {\n  let {\n      base: {\n        info\n      }\n    } = store.getState(),\n    checkList = ['/personal', '/store', '/update'];\n  return !info && checkList.includes(path);\n};\nconst Element = function Element(props) {\n  _s();\n  let {\n    component: Component,\n    meta,\n    path\n  } = props;\n  let isShow = !isCheckLogin(path);\n  let [_, setRandom] = useState(0);\n\n  // 登录态校验\n  useEffect(() => {\n    if (isShow) return;\n    (async () => {\n      let infoAction = await action.base.queryUserInfoAsync();\n      let info = infoAction.info;\n      if (!info) {\n        // 如果获取后还是不存在:没有登录\n        Toast.show({\n          icon: 'fail',\n          content: '请先登录'\n        });\n        // 跳转到登录页\n        navigate({\n          pathname: '/login',\n          search: `?to=${path}`\n        }, {\n          replace: true\n        });\n        return;\n      }\n      // 如果获取到了信息,说明是登录的,我们派发任务把信息存储到容器中\n      store.dispatch(infoAction);\n      setRandom(+new Date());\n    })();\n  });\n\n  // 修改页面的TITLE\n  let {\n    title = \"知乎日报-WebApp\"\n  } = meta || {};\n  document.title = title;\n\n  // 获取路由信息,基于属性传递给组件\n  const navigate = useNavigate(),\n    location = useLocation(),\n    params = useParams(),\n    [usp] = useSearchParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShow ? /*#__PURE__*/_jsxDEV(Component, {\n      navigate: navigate,\n      location: location,\n      params: params,\n      usp: usp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Mask, {\n      visible: true,\n      children: /*#__PURE__*/_jsxDEV(DotLoading, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Element, \"i5CAvn9iQXPlrFH/EGAe+eCxE90=\", false, function () {\n  return [useNavigate, useLocation, useParams, useSearchParams];\n});\n_c = Element;\nexport default function RouterView() {\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Mask, {\n      visible: true,\n      children: /*#__PURE__*/_jsxDEV(DotLoading, {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: routes.map(item => {\n        let {\n          name,\n          path\n        } = item;\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          element: /*#__PURE__*/_jsxDEV(Element, {\n            ...item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n_c2 = RouterView;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"Element\");\n$RefreshReg$(_c2, \"RouterView\");","map":{"version":3,"names":["React","Suspense","useState","useEffect","Routes","Route","useNavigate","useLocation","useParams","useSearchParams","routes","Mask","DotLoading","Toast","store","action","isCheckLogin","path","base","info","getState","checkList","includes","Element","props","component","Component","meta","isShow","_","setRandom","infoAction","queryUserInfoAsync","show","icon","content","navigate","pathname","search","replace","dispatch","Date","title","document","location","params","usp","RouterView","map","item","name"],"sources":["D:/xuexishipin/exercise/zhu-fen-exercise/react/zhihu/src/router/index.js"],"sourcesContent":["import React, { Suspense, useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate, useLocation, useParams, useSearchParams } from 'react-router-dom';\nimport routes from \"./routes\";\nimport { Mask, DotLoading, Toast } from 'antd-mobile';\nimport store from '../store';\nimport action from \"../store/action\";\n\n/* 统一路由配置 */\nconst isCheckLogin = (path) => {\n    let { base: { info } } = store.getState(),\n        checkList = ['/personal', '/store', '/update'];\n    return !info && checkList.includes(path);\n};\nconst Element = function Element(props) {\n    let { component: Component, meta, path } = props;\n    let isShow = !isCheckLogin(path);\n    let [_, setRandom] = useState(0);\n\n    // 登录态校验\n    useEffect(() => {\n        if (isShow) return;\n        (async () => {\n            let infoAction = await action.base.queryUserInfoAsync();\n            let info = infoAction.info;\n            if (!info) {\n                // 如果获取后还是不存在:没有登录\n                Toast.show({\n                    icon: 'fail',\n                    content: '请先登录'\n                });\n                // 跳转到登录页\n                navigate({\n                    pathname: '/login',\n                    search: `?to=${path}`\n                }, { replace: true });\n                return;\n            }\n            // 如果获取到了信息,说明是登录的,我们派发任务把信息存储到容器中\n            store.dispatch(infoAction);\n            setRandom(+new Date());\n        })();\n    });\n\n    // 修改页面的TITLE\n    let { title = \"知乎日报-WebApp\" } = meta || {};\n    document.title = title;\n\n    // 获取路由信息,基于属性传递给组件\n    const navigate = useNavigate(),\n        location = useLocation(),\n        params = useParams(),\n        [usp] = useSearchParams();\n\n    return <>\n        {isShow ?\n            <Component navigate={navigate}\n                location={location}\n                params={params}\n                usp={usp} /> :\n            <Mask visible={true}>\n                <DotLoading color=\"white\" />\n            </Mask>\n        }\n    </>;\n};\nexport default function RouterView() {\n    return <Suspense fallback={\n        <Mask visible={true}>\n            <DotLoading color=\"white\" />\n        </Mask>\n    }>\n        <Routes>\n            {routes.map(item => {\n                let { name, path } = item;\n                return <Route key={name}\n                    path={path}\n                    element={\n                        <Element {...item} />\n                    } />;\n            })}\n        </Routes>\n    </Suspense>;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}