{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useEffect, useRef } from 'react';\nexport default function useWhyDidYouUpdate(componentName, props) {\n  var prevProps = useRef({});\n  useEffect(function () {\n    if (prevProps.current) {\n      var allKeys = Object.keys(__assign(__assign({}, prevProps.current), props));\n      var changedProps_1 = {};\n      allKeys.forEach(function (key) {\n        if (!Object.is(prevProps.current[key], props[key])) {\n          changedProps_1[key] = {\n            from: prevProps.current[key],\n            to: props[key]\n          };\n        }\n      });\n      if (Object.keys(changedProps_1).length) {\n        console.log('[why-did-you-update]', componentName, changedProps_1);\n      }\n    }\n    prevProps.current = props;\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}