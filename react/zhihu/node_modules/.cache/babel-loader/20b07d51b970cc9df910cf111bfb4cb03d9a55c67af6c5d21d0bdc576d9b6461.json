{"ast":null,"code":"const delay = function () {\n  let interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(`@@${interval}`);\n    }, interval);\n  });\n};\n\n// 需求:串行请求，有三个请求[请求需要的时间分别是1000/2000/3000]?\ndelay(1000).then(value => {\n  console.log('第一个请求成功', value);\n  return delay(2000);\n}).then(value => {\n  console.log('第二个请求成功', value);\n  return delay(3000);\n}).then(value => {\n  console.log('第三个执行成功', value);\n}).catch(reason => {\n  console.log('仍和请求失败,都执行这里');\n})(async () => {\n  try {\n    let value = await delay(1000);\n    console.log(value, '第一个请求成功');\n    let value2 = await delay(2000);\n    console.log(value2, '第2个请求成功');\n    let value3 = await delay(3000);\n    console.log(value3, '第3个请求成功');\n  } catch (reason) {\n    console.log('任何请求失败,都执行这里', reason);\n  }\n})();\nconst handle = function* handle() {\n  let value = yield delay(1000);\n  console.log(value, '第一个请求成功');\n  let value2 = yield delay(2000);\n  console.log(value2, '第2个请求成功');\n  let value3 = yield delay(3000);\n  console.log(value3, '第3个请求成功');\n};\nlet itor = handle();\nconsole.log(itor.next());\nconsole.log(itor.next());\nconsole.log(itor.next());\nconsole.log(itor.next());\nitor.next();\nitor.next();\nitor.next();","map":{"version":3,"names":["delay","interval","Promise","resolve","setTimeout","then","value","console","log","catch","reason","value2","value3","handle","itor","next"],"sources":["D:/xuexishipin/exercise/zhu-fen-exercise/react/zhihu/src/demo.js"],"sourcesContent":["const delay=(interval=1000)=>{\n  return new Promise(resolve=>{\n    setTimeout(()=>{\n      resolve(`@@${interval}`)\n    },interval)\n  })\n}\n\n\n// 需求:串行请求，有三个请求[请求需要的时间分别是1000/2000/3000]?\ndelay(1000).then(value=>{\n  console.log('第一个请求成功',value)\n\n  return delay(2000)\n}).then(value=>{\n  console.log('第二个请求成功',value)\n\n  return delay(3000)\n}).then(value=>{\n  console.log('第三个执行成功',value)\n}).catch(reason=>{\n  console.log('仍和请求失败,都执行这里')\n})\n\n\n\n\n(async ()=>{\n  try {\n    let value=await delay(1000)\n    console.log(value,'第一个请求成功')\n\n    let value2=await delay(2000)\n    console.log(value2,'第2个请求成功')\n\n    let value3=await delay(3000)\n    console.log(value3,'第3个请求成功')\n    \n  } catch (reason) {\n    console.log('任何请求失败,都执行这里',reason)\n    \n  }\n})()\n\n\nconst handle=function* handle(){\n  let value=yield delay(1000)\n  console.log(value,'第一个请求成功')\n\n  let value2=yield delay(2000)\n  console.log(value2,'第2个请求成功')\n\n  let value3=yield delay(3000)\n  console.log(value3,'第3个请求成功')\n}\n\nlet itor=handle()\n\nconsole.log(itor.next())\nconsole.log(itor.next())\nconsole.log(itor.next())\nconsole.log(itor.next())\nitor.next()\nitor.next()\nitor.next()"],"mappings":"AAAA,MAAMA,KAAK,GAAC,YAAiB;EAAA,IAAhBC,QAAQ,uEAAC,IAAI;EACxB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAE;IAC1BC,UAAU,CAAC,MAAI;MACbD,OAAO,CAAE,KAAIF,QAAS,EAAC,CAAC;IAC1B,CAAC,EAACA,QAAQ,CAAC;EACb,CAAC,CAAC;AACJ,CAAC;;AAGD;AACAD,KAAK,CAAC,IAAI,CAAC,CAACK,IAAI,CAACC,KAAK,IAAE;EACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,KAAK,CAAC;EAE5B,OAAON,KAAK,CAAC,IAAI,CAAC;AACpB,CAAC,CAAC,CAACK,IAAI,CAACC,KAAK,IAAE;EACbC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,KAAK,CAAC;EAE5B,OAAON,KAAK,CAAC,IAAI,CAAC;AACpB,CAAC,CAAC,CAACK,IAAI,CAACC,KAAK,IAAE;EACbC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,KAAK,CAAC;AAC9B,CAAC,CAAC,CAACG,KAAK,CAACC,MAAM,IAAE;EACfH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;AAC7B,CAAC,CAAC,CAKD,YAAU;EACT,IAAI;IACF,IAAIF,KAAK,GAAC,MAAMN,KAAK,CAAC,IAAI,CAAC;IAC3BO,OAAO,CAACC,GAAG,CAACF,KAAK,EAAC,SAAS,CAAC;IAE5B,IAAIK,MAAM,GAAC,MAAMX,KAAK,CAAC,IAAI,CAAC;IAC5BO,OAAO,CAACC,GAAG,CAACG,MAAM,EAAC,SAAS,CAAC;IAE7B,IAAIC,MAAM,GAAC,MAAMZ,KAAK,CAAC,IAAI,CAAC;IAC5BO,OAAO,CAACC,GAAG,CAACI,MAAM,EAAC,SAAS,CAAC;EAE/B,CAAC,CAAC,OAAOF,MAAM,EAAE;IACfH,OAAO,CAACC,GAAG,CAAC,cAAc,EAACE,MAAM,CAAC;EAEpC;AACF,CAAC,CAAC,EAAE;AAGJ,MAAMG,MAAM,GAAC,UAAUA,MAAM,GAAE;EAC7B,IAAIP,KAAK,GAAC,MAAMN,KAAK,CAAC,IAAI,CAAC;EAC3BO,OAAO,CAACC,GAAG,CAACF,KAAK,EAAC,SAAS,CAAC;EAE5B,IAAIK,MAAM,GAAC,MAAMX,KAAK,CAAC,IAAI,CAAC;EAC5BO,OAAO,CAACC,GAAG,CAACG,MAAM,EAAC,SAAS,CAAC;EAE7B,IAAIC,MAAM,GAAC,MAAMZ,KAAK,CAAC,IAAI,CAAC;EAC5BO,OAAO,CAACC,GAAG,CAACI,MAAM,EAAC,SAAS,CAAC;AAC/B,CAAC;AAED,IAAIE,IAAI,GAACD,MAAM,EAAE;AAEjBN,OAAO,CAACC,GAAG,CAACM,IAAI,CAACC,IAAI,EAAE,CAAC;AACxBR,OAAO,CAACC,GAAG,CAACM,IAAI,CAACC,IAAI,EAAE,CAAC;AACxBR,OAAO,CAACC,GAAG,CAACM,IAAI,CAACC,IAAI,EAAE,CAAC;AACxBR,OAAO,CAACC,GAAG,CAACM,IAAI,CAACC,IAAI,EAAE,CAAC;AACxBD,IAAI,CAACC,IAAI,EAAE;AACXD,IAAI,CAACC,IAAI,EAAE;AACXD,IAAI,CAACC,IAAI,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}