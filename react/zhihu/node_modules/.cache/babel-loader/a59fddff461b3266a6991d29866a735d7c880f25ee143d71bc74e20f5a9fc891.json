{"ast":null,"code":"// 迭代对象的方法：for/in:获取所有的keys,然后迭代keys;也可以使用for/of(但是需要字节为其设置)\nlet obj = {\n  name: 'zhufeng',\n  age: 13,\n  0: 100,\n  [Symbol('AA')]: 200\n};\nObject.prototype[Symbol.iterator] = function iterator() {\n  let self = this,\n    //迭代的对象\n    index = -1,\n    keys = Reflect.ownKeys(self);\n  return {\n    next() {\n      index++;\n      if (index >= keys.length) {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    }\n  };\n};","map":{"version":3,"names":["obj","name","age","Symbol","Object","prototype","iterator","self","index","keys","Reflect","ownKeys","next","length","done","value","undefined"],"sources":["D:/xuexishipin/exercise/zhu-fen-exercise/react/zhihu/src/demo.js"],"sourcesContent":["// 迭代对象的方法：for/in:获取所有的keys,然后迭代keys;也可以使用for/of(但是需要字节为其设置)\nlet obj={\n  name:'zhufeng',\n  age:13,\n  0:100,\n  [Symbol('AA')]:200\n}\n\nObject.prototype[Symbol.iterator]=function iterator(){\n  let self=this,//迭代的对象\n  index=-1,\n  keys=Reflect.ownKeys(self);\n\n  return {\n    next(){\n      index++;\n      if(index>=keys.length){\n        return {\n          done:true,\n          value:undefined\n        }\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;AACA,IAAIA,GAAG,GAAC;EACNC,IAAI,EAAC,SAAS;EACdC,GAAG,EAAC,EAAE;EACN,CAAC,EAAC,GAAG;EACL,CAACC,MAAM,CAAC,IAAI,CAAC,GAAE;AACjB,CAAC;AAEDC,MAAM,CAACC,SAAS,CAACF,MAAM,CAACG,QAAQ,CAAC,GAAC,SAASA,QAAQ,GAAE;EACnD,IAAIC,IAAI,GAAC,IAAI;IAAC;IACdC,KAAK,GAAC,CAAC,CAAC;IACRC,IAAI,GAACC,OAAO,CAACC,OAAO,CAACJ,IAAI,CAAC;EAE1B,OAAO;IACLK,IAAI,GAAE;MACJJ,KAAK,EAAE;MACP,IAAGA,KAAK,IAAEC,IAAI,CAACI,MAAM,EAAC;QACpB,OAAO;UACLC,IAAI,EAAC,IAAI;UACTC,KAAK,EAACC;QACR,CAAC;MACH;IACF;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}