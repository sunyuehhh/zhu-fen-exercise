{"ast":null,"code":"import { take, takeEvery, takeLatest, throttle, debounce, call, apply, fork, delay, put, select } from 'redux-saga/effects';\nimport * as TYPES from './action-types';\nconst api = {\n  queryData(id, name) {\n    console.log('接口被调用', id, name);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let result = {\n          code: 0,\n          data: [10, 20, 30, 40]\n        };\n        resolve(result);\n      }, 2000);\n    });\n  },\n  queryBanner(id, name) {\n    console.log('轮播图', id, name);\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let result = {\n          code: 0,\n          data: [10, 20, 30, 40]\n        };\n        resolve(result);\n      }, 1000);\n    });\n  }\n};\n// 创建执行函数，再任务被监听后，去做异步操作[Generator函数]\nconst workingCount = function* workingCount(action) {\n  let {\n    data\n  } = yield call(api.queryData, 100, '珠峰');\n  console.log(data, '第一个请求成功');\n  let {\n    data: data2\n  } = yield call(api.queryBanner, 100, '珠峰');\n  console.log(data, '第一个请求成功');\n};\n\n// 创建监听器，监听派发的仍无\nconst saga = function* saga() {\n  yield takeLatest(`${TYPES.DEMO_COUNT}@SAGA@`, workingCount);\n};\nexport default saga;","map":{"version":3,"names":["take","takeEvery","takeLatest","throttle","debounce","call","apply","fork","delay","put","select","TYPES","api","queryData","id","name","console","log","Promise","resolve","setTimeout","result","code","data","queryBanner","workingCount","action","data2","saga","DEMO_COUNT"],"sources":["D:/xuexishipin/exercise/zhu-fen-exercise/react/zhihu/src/store2/saga.js"],"sourcesContent":["import {take,takeEvery,takeLatest,throttle,debounce,call,apply,fork,delay,put,select} from 'redux-saga/effects'\nimport * as TYPES from './action-types'\n\n\nconst api={\n  queryData(id,name){\n    console.log('接口被调用',id,name)\n    return new Promise(resolve=>{\n      setTimeout(()=>{\n        let result={\n          code:0,\n          data:[10,20,30,40]\n        }\n        resolve(result)\n      },2000)\n    })\n  },\n  queryBanner(id,name){\n    console.log('轮播图',id,name)\n    return new Promise(resolve=>{\n      setTimeout(()=>{\n        let result={\n          code:0,\n          data:[10,20,30,40]\n        }\n        resolve(result)\n      },1000)\n    })\n  }\n}\n// 创建执行函数，再任务被监听后，去做异步操作[Generator函数]\nconst workingCount=function* workingCount(action){\n  let {data}=yield call(api.queryData,100,'珠峰')\n\n  console.log(data,'第一个请求成功')\n\n  let {data:data2}=yield call(api.queryBanner,100,'珠峰')\n  console.log(data,'第一个请求成功')\n\n}\n\n// 创建监听器，监听派发的仍无\nconst saga=function* saga(){\n  yield takeLatest(`${TYPES.DEMO_COUNT}@SAGA@`,workingCount)\n\n}\n\n\nexport default saga"],"mappings":"AAAA,SAAQA,IAAI,EAACC,SAAS,EAACC,UAAU,EAACC,QAAQ,EAACC,QAAQ,EAACC,IAAI,EAACC,KAAK,EAACC,IAAI,EAACC,KAAK,EAACC,GAAG,EAACC,MAAM,QAAO,oBAAoB;AAC/G,OAAO,KAAKC,KAAK,MAAM,gBAAgB;AAGvC,MAAMC,GAAG,GAAC;EACRC,SAAS,CAACC,EAAE,EAACC,IAAI,EAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACH,EAAE,EAACC,IAAI,CAAC;IAC5B,OAAO,IAAIG,OAAO,CAACC,OAAO,IAAE;MAC1BC,UAAU,CAAC,MAAI;QACb,IAAIC,MAAM,GAAC;UACTC,IAAI,EAAC,CAAC;UACNC,IAAI,EAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE;QACnB,CAAC;QACDJ,OAAO,CAACE,MAAM,CAAC;MACjB,CAAC,EAAC,IAAI,CAAC;IACT,CAAC,CAAC;EACJ,CAAC;EACDG,WAAW,CAACV,EAAE,EAACC,IAAI,EAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACH,EAAE,EAACC,IAAI,CAAC;IAC1B,OAAO,IAAIG,OAAO,CAACC,OAAO,IAAE;MAC1BC,UAAU,CAAC,MAAI;QACb,IAAIC,MAAM,GAAC;UACTC,IAAI,EAAC,CAAC;UACNC,IAAI,EAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE;QACnB,CAAC;QACDJ,OAAO,CAACE,MAAM,CAAC;MACjB,CAAC,EAAC,IAAI,CAAC;IACT,CAAC,CAAC;EACJ;AACF,CAAC;AACD;AACA,MAAMI,YAAY,GAAC,UAAUA,YAAY,CAACC,MAAM,EAAC;EAC/C,IAAI;IAACH;EAAI,CAAC,GAAC,MAAMlB,IAAI,CAACO,GAAG,CAACC,SAAS,EAAC,GAAG,EAAC,IAAI,CAAC;EAE7CG,OAAO,CAACC,GAAG,CAACM,IAAI,EAAC,SAAS,CAAC;EAE3B,IAAI;IAACA,IAAI,EAACI;EAAK,CAAC,GAAC,MAAMtB,IAAI,CAACO,GAAG,CAACY,WAAW,EAAC,GAAG,EAAC,IAAI,CAAC;EACrDR,OAAO,CAACC,GAAG,CAACM,IAAI,EAAC,SAAS,CAAC;AAE7B,CAAC;;AAED;AACA,MAAMK,IAAI,GAAC,UAAUA,IAAI,GAAE;EACzB,MAAM1B,UAAU,CAAE,GAAES,KAAK,CAACkB,UAAW,QAAO,EAACJ,YAAY,CAAC;AAE5D,CAAC;AAGD,eAAeG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}