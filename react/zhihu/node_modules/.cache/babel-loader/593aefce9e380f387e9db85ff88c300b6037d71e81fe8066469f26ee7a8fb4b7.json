{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useRef } from 'react';\nimport useUpdateEffect from '../../../useUpdateEffect';\n// support refreshDeps & ready\nvar useAutoRunPlugin = function useAutoRunPlugin(fetchInstance, _a) {\n  var manual = _a.manual,\n    _b = _a.ready,\n    ready = _b === void 0 ? true : _b,\n    _c = _a.defaultParams,\n    defaultParams = _c === void 0 ? [] : _c,\n    _d = _a.refreshDeps,\n    refreshDeps = _d === void 0 ? [] : _d,\n    refreshDepsAction = _a.refreshDepsAction;\n  var hasAutoRun = useRef(false);\n  hasAutoRun.current = false;\n  useUpdateEffect(function () {\n    if (!manual && ready) {\n      hasAutoRun.current = true;\n      fetchInstance.run.apply(fetchInstance, __spreadArray([], __read(defaultParams), false));\n    }\n  }, [ready]);\n  useUpdateEffect(function () {\n    if (hasAutoRun.current) {\n      return;\n    }\n    if (!manual) {\n      hasAutoRun.current = true;\n      if (refreshDepsAction) {\n        refreshDepsAction();\n      } else {\n        fetchInstance.refresh();\n      }\n    }\n  }, __spreadArray([], __read(refreshDeps), false));\n  return {\n    onBefore: function onBefore() {\n      if (!ready) {\n        return {\n          stopNow: true\n        };\n      }\n    }\n  };\n};\nuseAutoRunPlugin.onInit = function (_a) {\n  var _b = _a.ready,\n    ready = _b === void 0 ? true : _b,\n    manual = _a.manual;\n  return {\n    loading: !manual && ready\n  };\n};\nexport default useAutoRunPlugin;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}