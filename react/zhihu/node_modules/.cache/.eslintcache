[{"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\index.jsx":"1","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\App.jsx":"2","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\index.js":"3","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\router\\index.js":"4","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\reducer\\index.js":"5","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\router\\routes.js":"6","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action\\index.js":"7","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\reducer\\base.js":"8","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\reducer\\store.js":"9","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Home.jsx":"10","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Login.jsx":"11","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Page404.jsx":"12","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Update.jsx":"13","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Store.jsx":"14","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Detail.jsx":"15","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Personal.jsx":"16","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action-types.js":"17","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\assets\\utils.js":"18","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action\\store.js":"19","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action\\base.js":"20","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\NavBarAgain.jsx":"21","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\api\\index.js":"22","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\api\\http.js":"23","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\HomeHead.jsx":"24","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\NewsItem.jsx":"25","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\SkeletonAgain.jsx":"26","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\ButtonAgain.jsx":"27","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\demo.js":"28","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Demo.jsx":"29","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\index.js":"30","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\reducer\\index.js":"31","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\reducer\\demoReducer.js":"32","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\action-types.js":"33","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\saga.js":"34"},{"size":999,"mtime":1746357639999,"results":"35","hashOfConfig":"36"},{"size":373,"mtime":1745933514072,"results":"37","hashOfConfig":"36"},{"size":523,"mtime":1671770367000,"results":"38","hashOfConfig":"36"},{"size":2637,"mtime":1672203742000,"results":"39","hashOfConfig":"36"},{"size":220,"mtime":1671769764000,"results":"40","hashOfConfig":"36"},{"size":1293,"mtime":1672204016000,"results":"41","hashOfConfig":"36"},{"size":156,"mtime":1671769989000,"results":"42","hashOfConfig":"36"},{"size":394,"mtime":1672106022000,"results":"43","hashOfConfig":"36"},{"size":603,"mtime":1672129968000,"results":"44","hashOfConfig":"36"},{"size":4144,"mtime":1746282629831,"results":"45","hashOfConfig":"36"},{"size":4598,"mtime":1746096496849,"results":"46","hashOfConfig":"36"},{"size":102,"mtime":1745844264369,"results":"47","hashOfConfig":"36"},{"size":3553,"mtime":1746289698601,"results":"48","hashOfConfig":"36"},{"size":102,"mtime":1745844268205,"results":"49","hashOfConfig":"36"},{"size":5941,"mtime":1746276007897,"results":"50","hashOfConfig":"36"},{"size":2346,"mtime":1672194094000,"results":"51","hashOfConfig":"36"},{"size":122,"mtime":1672129684000,"results":"52","hashOfConfig":"36"},{"size":8703,"mtime":1672218878000,"results":"53","hashOfConfig":"36"},{"size":778,"mtime":1672148948000,"results":"54","hashOfConfig":"36"},{"size":639,"mtime":1672106514000,"results":"55","hashOfConfig":"36"},{"size":363,"mtime":1745844975475,"results":"56","hashOfConfig":"36"},{"size":1832,"mtime":1672213114000,"results":"57","hashOfConfig":"36"},{"size":2889,"mtime":1672050423000,"results":"58","hashOfConfig":"36"},{"size":1422,"mtime":1746275771663,"results":"59","hashOfConfig":"36"},{"size":887,"mtime":1746282676708,"results":"60","hashOfConfig":"36"},{"size":330,"mtime":1671855779000,"results":"61","hashOfConfig":"36"},{"size":713,"mtime":1672043427000,"results":"62","hashOfConfig":"36"},{"size":1928,"mtime":1746350681441,"results":"63","hashOfConfig":"36"},{"size":943,"mtime":1746361408791,"results":"64","hashOfConfig":"36"},{"size":357,"mtime":1746359276713,"results":"65","hashOfConfig":"36"},{"size":167,"mtime":1746357080113,"results":"66","hashOfConfig":"36"},{"size":496,"mtime":1746360447265,"results":"67","hashOfConfig":"36"},{"size":107,"mtime":1746356223207,"results":"68","hashOfConfig":"36"},{"size":1445,"mtime":1746367680069,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},"1s40nnk",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\index.jsx",["180","181","182"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n/* REDUX */\nimport { Provider } from 'react-redux';\nimport store from './store2';\n\n/* ANTD-MOBILE */\nimport { ConfigProvider } from 'antd-mobile';\nimport zhCN from 'antd-mobile/es/locales/zh-CN';\n\n/* 改变REM换算比例 */\nimport 'lib-flexible';\nimport './index.less';\n\nimport Demo from './views/Demo'\n\n/* 处理最大宽度 */\n(function () {\n  const handleMax = function handleMax() {\n    let html = document.documentElement,\n      root = document.getElementById('root'),\n      deviceW = html.clientWidth;\n    root.style.maxWidth = \"750px\";\n    if (deviceW >= 750) {\n      html.style.fontSize = '75px';\n    }\n  };\n  handleMax();\n})();\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <ConfigProvider locale={zhCN}>\n  //   <Provider store={store}>\n  //     <App />\n  //   </Provider>\n  // </ConfigProvider>\n  <Provider store={store}>\n  <Demo></Demo>\n  </Provider>\n);",[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\App.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\index.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\router\\index.js",["183"],[],"import React, { Suspense, useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate, useLocation, useParams, useSearchParams } from 'react-router-dom';\nimport routes from \"./routes\";\nimport { Mask, DotLoading, Toast } from 'antd-mobile';\nimport store from '../store';\nimport action from \"../store/action\";\n\n/* 统一路由配置 */\nconst isCheckLogin = (path) => {\n    let { base: { info } } = store.getState(),\n        checkList = ['/personal', '/store', '/update'];\n    return !info && checkList.includes(path);\n};\nconst Element = function Element(props) {\n    let { component: Component, meta, path } = props;\n    let isShow = !isCheckLogin(path);\n    let [_, setRandom] = useState(0);\n\n    // 登录态校验\n    useEffect(() => {\n        if (isShow) return;\n        (async () => {\n            let infoAction = await action.base.queryUserInfoAsync();\n            let info = infoAction.info;\n            if (!info) {\n                // 如果获取后还是不存在:没有登录\n                Toast.show({\n                    icon: 'fail',\n                    content: '请先登录'\n                });\n                // 跳转到登录页\n                navigate({\n                    pathname: '/login',\n                    search: `?to=${path}`\n                }, { replace: true });\n                return;\n            }\n            // 如果获取到了信息,说明是登录的,我们派发任务把信息存储到容器中\n            store.dispatch(infoAction);\n            setRandom(+new Date());\n        })();\n    });\n\n    // 修改页面的TITLE\n    let { title = \"知乎日报-WebApp\" } = meta || {};\n    document.title = title;\n\n    // 获取路由信息,基于属性传递给组件\n    const navigate = useNavigate(),\n        location = useLocation(),\n        params = useParams(),\n        [usp] = useSearchParams();\n\n    return <>\n        {isShow ?\n            <Component navigate={navigate}\n                location={location}\n                params={params}\n                usp={usp} /> :\n            <Mask visible={true}>\n                <DotLoading color=\"white\" />\n            </Mask>\n        }\n    </>;\n};\nexport default function RouterView() {\n    return <Suspense fallback={\n        <Mask visible={true}>\n            <DotLoading color=\"white\" />\n        </Mask>\n    }>\n        <Routes>\n            {routes.map(item => {\n                let { name, path } = item;\n                return <Route key={name}\n                    path={path}\n                    element={\n                        <Element {...item} />\n                    } />;\n            })}\n        </Routes>\n    </Suspense>;\n};","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\reducer\\index.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\router\\routes.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action\\index.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\reducer\\base.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\reducer\\store.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Home.jsx",["184","185"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport HomeHead from \"../components/HomeHead\";\nimport _ from '../assets/utils';\nimport './Home.less';\nimport { Swiper, Image, Divider, DotLoading } from 'antd-mobile';\nimport { Link } from 'react-router-dom';\nimport api from '../api';\nimport NewsItem from \"../components/NewsItem\";\nimport SkeletonAgain from \"../components/SkeletonAgain\";\n\nconst Home = function Home() {\n    /* 创建所需状态 */\n    let [today, setToday] = useState(_.formatTime(null, \"{0}{1}{2}\")),\n        [bannerData, setBannerData] = useState([]),\n        [newsList, setNewsList] = useState([]);\n    let loadMore = useRef();\n\n    /* 第一次渲染完毕:向服务器发送数据请求 */\n    useEffect(() => {\n        (async () => {\n            try {\n                let { date, stories, top_stories } = await api.queryNewsLatest();\n                setToday(date);\n                setBannerData(top_stories);\n                // 更新新闻列表状态\n                newsList.push({\n                    date,\n                    stories\n                });\n                setNewsList([...newsList]);\n            } catch (_) { }\n        })();\n    }, []);\n\n    /* 第一次渲染完毕:设置监听器,实现触底加载 */\n    useEffect(() => {\n        let ob = new IntersectionObserver(async changes => {\n            let { isIntersecting } = changes[0];\n            if (isIntersecting) {\n                // 加载更多的按钮出现在视口中「也就是触底了」\n                try {\n                    let time = newsList[newsList.length - 1]['date'];\n                    let res = await api.queryNewsBefore(time);\n                    newsList.push(res);\n                    console.log(newsList,'newList')\n                    setNewsList([...newsList]);\n                } catch (_) { }\n            }\n        });\n        let loadMoreBox = loadMore.current;\n        ob.observe(loadMore.current);\n\n        // 在组件销毁释放的时候:手动销毁监听器\n        return () => {\n            ob.unobserve(loadMoreBox); //loadMore.current=null\n            ob = null;\n        };\n    }, []);\n\n    return <div className=\"home-box\">\n        {/* 头部 */}\n        <HomeHead today={today} />\n\n        {/* 轮播图 */}\n        <div className=\"swiper-box\">\n            {bannerData.length > 0 ? <Swiper autoplay={true} loop={true}>\n                {bannerData.map(item => {\n                    let { id, image, title, hint } = item;\n                    return <Swiper.Item key={id}>\n                        <Link to={{ pathname: `/detail/${id}` }}>\n                            <Image src={image} lazy />\n                            <div className=\"desc\">\n                                <h3 className=\"title\">{title}</h3>\n                                <p className=\"author\">{hint}</p>\n                            </div>\n                        </Link>\n                    </Swiper.Item>;\n                })}\n            </Swiper> : null}\n        </div>\n\n        {/* 新闻列表 */}\n        {newsList.length === 0 ?\n            <SkeletonAgain /> :\n            <>\n                {\n                    newsList.map((item, index) => {\n                        let { date, stories } = item;\n                        return <div className=\"news-box\" key={date}>\n                            {index !== 0 ? <Divider contentPosition=\"left\">\n                                {_.formatTime(date, '{1}月{2}日')}\n                            </Divider> : null}\n                            <div className=\"list\">\n                                {stories.map(cur => {\n                                    return <NewsItem key={cur.id} info={cur} />;\n                                })}\n                            </div>\n                        </div>;\n                    })\n                }\n            </>\n        }\n\n        {/* 加载更多 */}\n        <div className=\"loadmore-box\" ref={loadMore}\n            style={{\n                display: newsList.length === 0 ? 'none' : 'block'\n            }} >\n            <DotLoading />\n            数据加载中\n        </div>\n    </div >;\n};\nexport default Home;","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Login.jsx",["186"],[],"import React, { useState, useEffect } from 'react';\nimport { Form, Input, Toast } from 'antd-mobile';\nimport { connect } from 'react-redux';\nimport action from '../store/action';\nimport './Login.less';\nimport ButtonAgain from '../components/ButtonAgain';\nimport NavBarAgain from '../components/NavBarAgain';\nimport api from '../api';\nimport _ from '../assets/utils';\n\n/* 自定义表单校验规则 */\nconst validate = {\n    phone(_, value) {\n        value = value.trim();\n        let reg = /^(?:(?:\\+|00)86)?1\\d{10}$/;\n        if (value.length === 0) return Promise.reject(new Error('手机号是必填项!'));\n        if (!reg.test(value)) return Promise.reject(new Error('手机号格式有误!'));\n        return Promise.resolve();\n    },\n    code(_, value) {\n        value = value.trim();\n        let reg = /^\\d{6}$/;\n        if (value.length === 0) return Promise.reject(new Error('验证码是必填项!'));\n        if (!reg.test(value)) return Promise.reject(new Error('验证码格式有误!'));\n        return Promise.resolve();\n    }\n};\n\nconst Login = function Login(props) {\n    let { queryUserInfoAsync, navigate, usp } = props;\n\n    /* 状态 */\n    const [formIns] = Form.useForm(),\n        [disabled, setDisabled] = useState(false),\n        [sendText, setSendText] = useState('发送验证码');\n\n    /* 表单提交 */\n    const submit = async () => {\n        try {\n            await formIns.validateFields();\n            let { phone, code } = formIns.getFieldsValue();\n            let { code: codeHttp, token } = await api.login(phone, code);\n            if (+codeHttp !== 0) {\n                Toast.show({\n                    icon: 'fail',\n                    content: '登录失败'\n                });\n                formIns.resetFields(['code']);\n                return;\n            }\n            // 登录成功:存储Token、存储登录者信息到redux、提示、跳转\n            _.storage.set('tk', token);\n            await queryUserInfoAsync(); //派发任务,同步redux中的状态信息\n            Toast.show({\n                icon: 'success',\n                content: '登录/注册成功'\n            });\n            let to = usp.get('to');\n            to ? navigate(to, { replace: true }) : navigate(-1);\n        } catch (_) { }\n    };\n\n    /* 发送验证码 */\n    let timer = null,\n        num = 31;\n    const countdown = () => {\n        num--;\n        if (num === 0) {\n            clearInterval(timer);\n            timer = null;\n            setSendText(`发送验证码`);\n            setDisabled(false);\n            return;\n        }\n        setSendText(`${num}秒后重发`);\n    };\n    const send = async () => {\n        try {\n            await formIns.validateFields(['phone']);\n            let phone = formIns.getFieldValue('phone');\n            let { code } = await api.sendPhoneCode(phone);\n            if (+code !== 0) {\n                Toast.show({\n                    icon: 'fail',\n                    content: '发送失败'\n                });\n                return;\n            }\n            // 发送成功\n            setDisabled(true);\n            countdown();\n            if (!timer) timer = setInterval(countdown, 1000);\n        } catch (_) { }\n    };\n    // 组件销毁的时候:把没有清除的定时器干掉\n    useEffect(() => {\n        return () => {\n            if (timer) {\n                clearInterval(timer);\n                timer = null;\n            }\n        }\n    }, []);\n\n    return <div className='login-box'>\n        <NavBarAgain title=\"登录/注册\" />\n        <Form\n            layout='horizontal'\n            style={{ '--border-top': 'none' }}\n            footer={\n                <ButtonAgain color='primary'\n                    onClick={submit}>\n                    提交\n                </ButtonAgain>\n            }\n            form={formIns}\n            initialValues={{ phone: '', code: '' }}\n        >\n            <Form.Item name='phone' label='手机号' rules={[{ validator: validate.phone }]}>\n                <Input placeholder='请输入手机号' />\n            </Form.Item>\n\n            <Form.Item name='code' label='验证码'\n                rules={[{ validator: validate.code }]}\n                extra={\n                    <ButtonAgain size='small' color='primary'\n                        disabled={disabled}\n                        onClick={send}>\n                        {sendText}\n                    </ButtonAgain>\n                }\n            >\n                <Input />\n            </Form.Item>\n        </Form>\n    </div>;\n};\nexport default connect(\n    null,\n    action.base\n)(Login);\n","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Page404.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Update.jsx",["187","188","189"],[],"import React, { useState } from \"react\";\nimport NavBarAgain from '../components/NavBarAgain';\nimport ButtonAgain from '../components/ButtonAgain';\nimport styled from \"styled-components\";\nimport { ImageUploader, Input, Toast } from 'antd-mobile';\nimport { connect } from 'react-redux';\nimport action from '../store/action';\nimport api from '../api';\n\n/* 样式 */\nconst UpdateBox = styled.div`\n    .formBox {\n        padding: 30px;\n\n        .item {\n            display: flex;\n            align-items: center;\n            height: 110px;\n            line-height: 110px;\n            font-size: 28px;\n\n            .label {\n                width: 20%;\n                text-align: center;\n            }\n\n            .input {\n                width: 80%;\n            }\n        }\n    }\n\n    .submit {\n        display: block;\n        margin: 0 auto;\n        width: 60%;\n        height: 70px;\n        font-size: 28px;\n    }\n`;\n\nconst Update = function Update(props) {\n    let {info,queryUserInfoAsync,navigate}=props;\n    // 定义状态\n    let [pic,setPic]=useState([{url:info.pic}]),\n    [username,setUsername]=useState(info.name);\n\n    // 图片上传\n    const limitImage=(file)=>{\n        let limit=1*1024*1024\n        if(file.size>limit){\n            Toast.show({\n                icon:'fail',\n                content:'图片必须在1MB以内'\n            })\n        }\n        return file\n\n    }\n\n    const uploadImage=async (file)=>{\n        let temp;\n        try {\n            let {code,pic}=await api.upload(file)\n            if(+code!==0){\n                Toast.show({\n                    icon:'fail',\n                    content:'上传失败'\n                })\n            }\n            temp=pic\n            setPic([{\n                url:pic\n            }])\n        } catch (error) {\n            \n        }\n\n        return {url:temp}\n\n    }\n\n    // 提交信息\n    const submit=async ()=>{\n        if(pic.length===0){\n            Toast.show({\n                icon:'fail',\n                content:'请先上传图片'\n            })\n\n            return \n        }\n\n        // 获取信息，发送请求\n        let [{url}]=pic\n        try {\n            let {code}=await api.userUpdate({username:username.trim(),url})\n            if(+code!==0){\n\n            }\n\n            Toast.show({\n                icon:'success',\n                content:''\n            })\n\n        } catch (error) {\n            \n        }\n\n\n        \n\n    }\n\n\n\n\n    return <UpdateBox>\n        <NavBarAgain title=\"修改信息\" />\n        <div className=\"formBox\">\n            <div className=\"item\">\n                <div className=\"label\">头像</div>\n                <div className=\"input\">\n                    <ImageUploader value={pic\n                }\n                maxCount={1}\n                onDelete={()=>{\n                    setPic([])\n                }}\n                beforeUpload={limitImage}\n                upload={uploadImage}\n                    />\n                </div>\n            </div>\n            <div className=\"item\">\n                <div className=\"label\">姓名</div>\n                <div className=\"input\">\n                    <Input placeholder='请输入账号名称' value={username} onChange={val=>{\n                        setUsername(val)\n                    }}/>\n                </div>\n            </div>\n            <ButtonAgain color='primary' className=\"submit\"\n                >\n                提交\n            </ButtonAgain>\n        </div>\n    </UpdateBox>;\n};\nexport default connect(\n    state => state.base,\n    action.base\n)(Update);","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Store.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Detail.jsx",["190","191","192","193"],[],"import React, { useState, useEffect, useMemo } from \"react\";\nimport './Detail.less';\nimport { LeftOutline, MessageOutline, LikeOutline, StarOutline, MoreOutline } from 'antd-mobile-icons';\nimport { Badge, Toast } from 'antd-mobile';\nimport api from '../api';\nimport SkeletonAgain from '../components/SkeletonAgain';\nimport { flushSync } from 'react-dom';\nimport { connect } from 'react-redux';\nimport action from '../store/action';\n\nconst Detail = function Detail(props) {\n    let { navigate, params } = props;\n    /* 定义状态 */\n    let [info, setInfo] = useState(null),\n        [extra, setExtra] = useState(null);\n    /* 第一次渲染完毕:获取数据 */\n    let link;\n    const handleStyle = (result) => {\n        let { css } = result;\n        if (!Array.isArray(css)) return;\n        css = css[0];\n        if (!css) return;\n        // 创建<LINK>导入样式\n        link = document.createElement('link');\n        link.rel = \"stylesheet\";\n        link.href = css;\n        document.head.appendChild(link);\n    };\n    const handleImage = (result) => {\n        let imgPlaceHolder = document.querySelector('.img-place-holder');\n        if (!imgPlaceHolder) return;\n        // 创建大图\n        let tempImg = new Image;\n        tempImg.src = result.image;\n        tempImg.onload = () => {\n            imgPlaceHolder.appendChild(tempImg);\n        };\n        tempImg.onerror = () => {\n            let parent = imgPlaceHolder.parentNode;\n            parent.parentNode.removeChild(parent);\n        };\n    };\n    useEffect(() => {\n        (async () => {\n            try {\n                let result = await api.queryNewsInfo(params.id);\n                flushSync(() => {\n                    setInfo(result);\n                    handleStyle(result);\n                });\n                handleImage(result);\n            } catch (_) { }\n        })();\n        // 销毁组件:移除创建的样式\n        return () => {\n            if (link) document.head.removeChild(link);\n        };\n    }, []);\n    useEffect(() => {\n        (async () => {\n            try {\n                let result = await api.queryStoryExtra(params.id);\n                setExtra(result);\n            } catch (_) { }\n        })();\n    }, []);\n\n    //=========下面的逻辑是关于登录/收藏的\n    let {\n        base: { info: userInfo }, queryUserInfoAsync,\n        location,\n        store: { list: storeList }, queryStoreListAsync, removeStoreListById\n    } = props;\n    useEffect(() => {\n        (async () => {\n            // 第一次渲染完:如果userInfo不存在,我们派发任务同步登录者信息\n            if (!userInfo) {\n                let { info } = await queryUserInfoAsync();\n                userInfo = info;\n            }\n            // 如果已经登录 && 没有收藏列表信息:派发任务同步收藏列表\n            if (userInfo && !storeList) {\n                queryStoreListAsync();\n            }\n        })();\n    }, []);\n    // 依赖于收藏列表和路径参数,计算出是否收藏\n    const isStore = useMemo(() => {\n        if (!storeList) return false;\n        return storeList.some(item => {\n            return +item.news.id === +params.id;\n        });\n    }, [storeList, params]);\n\n    // 点击收藏按钮\n    const handleStore = async () => {\n        if (!userInfo) {\n            // 未登录\n            Toast.show({\n                icon: 'fail',\n                content: '请先登录'\n            });\n            navigate(`/login?to=${location.pathname}`, { replace: true });\n            return;\n        }\n        // 已经登录:收藏或者移除收藏\n        if (isStore) {\n            // 移除收藏\n            let item = storeList.find(item => {\n                return +item.news.id === +params.id;\n            });\n            if (!item) return;\n            let { code } = await api.storeRemove(item.id);\n            if (+code !== 0) {\n                Toast.show({\n                    icon: 'fail',\n                    content: '操作失败'\n                });\n                return;\n            }\n            Toast.show({\n                icon: 'success',\n                content: '操作成功'\n            });\n            removeStoreListById(item.id); //告诉redux中也把这一项移除掉\n            return;\n        }\n        // 收藏\n        try {\n            let { code } = await api.store(params.id);\n            if (+code !== 0) {\n                Toast.show({\n                    icon: 'fail',\n                    content: '收藏失败'\n                });\n                return;\n            }\n            Toast.show({\n                icon: 'success',\n                content: '收藏成功'\n            });\n            queryStoreListAsync(); //同步最新的收藏列表到redux容器中\n        } catch (_) { }\n    };\n\n    return <div className=\"detail-box\">\n        {/* 新闻内容 */}\n        {!info ? <SkeletonAgain /> :\n            <div className=\"content\"\n                dangerouslySetInnerHTML={{\n                    __html: info.body\n                }}\n            ></div>\n        }\n        {/* 底部图标 */}\n        <div className=\"tab-bar\">\n            <div className=\"back\"\n                onClick={() => {\n                    navigate(-1);\n                }}>\n                <LeftOutline />\n            </div>\n            <div className=\"icons\">\n                <Badge content={extra ? extra.comments : 0}><MessageOutline /></Badge>\n                <Badge content={extra ? extra.popularity : 0}><LikeOutline /></Badge>\n                <span className={isStore ? 'stored' : ''}\n                    onClick={handleStore}>\n                    <StarOutline />\n                </span>\n                <span><MoreOutline /></span>\n            </div>\n        </div>\n    </div>;\n};\nexport default connect(\n    state => {\n        return {\n            base: state.base,\n            store: state.store\n        };\n    },\n    { ...action.base, ...action.store }\n)(Detail);","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Personal.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action-types.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\assets\\utils.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action\\store.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store\\action\\base.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\NavBarAgain.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\api\\index.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\api\\http.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\HomeHead.jsx",["194","195"],[],"import React, { useMemo, useEffect } from \"react\";\nimport timg from '../assets/images/timg.jpg';\nimport './HomeHead.less';\nimport { connect } from 'react-redux';\nimport action from '../store/action';\nimport { useNavigate } from 'react-router-dom';\n\nconst HomeHead=function(props){\n    const navigate=useNavigate()\n    // 计算事件中的月和日\n    let { today, info, queryUserInfoAsync } = props;\n\n    let time=useMemo(()=>{\n        // let [,month,day]=today.match(/^\\d{4}(\\d{2})(\\d{2})/)\n        \n        // return {\n        //     month:month+'月',\n        //     day\n        // }\n        \n        return {\n            month:1+'月',\n            day:2\n        }\n    },[today])\n\n    //第一次渲染完:如果info中没有信息，我们尝试派发一次，获取到登陆者信息\n    useEffect(()=>{\n        if(!info){\n           queryUserInfoAsync()\n        }\n    },[])\n\n\n    return <header className=\"home-head-box\">\n        <div className=\"info\">\n            <div className=\"time\">\n                <span>{time.day}</span>\n                <span>{time.month}</span>\n            </div>\n            <h2 className=\"title\">知乎日报</h2> \n        </div>\n        <div className=\"picture\" onClick={()=>{\n            navigate('/personal')\n        }}>\n            <img src={info?info.pic:timg} alt=\"\" />\n        </div>\n    </header>\n\n}\n\n\nexport default connect(\n    state => state.base,\n    action.base\n)(HomeHead);","D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\NewsItem.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\SkeletonAgain.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\components\\ButtonAgain.jsx",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\demo.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\views\\Demo.jsx",["196"],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\index.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\reducer\\index.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\reducer\\demoReducer.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\action-types.js",[],[],"D:\\xuexishipin\\exercise\\zhu-fen-exercise\\react\\zhihu\\src\\store2\\saga.js",["197","198","199","200","201","202","203","204","205"],[],{"ruleId":"206","severity":1,"message":"207","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":11},{"ruleId":"206","severity":1,"message":"210","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":24},{"ruleId":"206","severity":1,"message":"211","line":11,"column":8,"nodeType":"208","messageId":"209","endLine":11,"endColumn":12},{"ruleId":"206","severity":1,"message":"212","line":17,"column":10,"nodeType":"208","messageId":"209","endLine":17,"endColumn":11},{"ruleId":"213","severity":1,"message":"214","line":33,"column":8,"nodeType":"215","endLine":33,"endColumn":10,"suggestions":"216"},{"ruleId":"213","severity":1,"message":"214","line":58,"column":8,"nodeType":"215","endLine":58,"endColumn":10,"suggestions":"217"},{"ruleId":"213","severity":1,"message":"218","line":100,"column":25,"nodeType":"219","endLine":100,"endColumn":29},{"ruleId":"206","severity":1,"message":"220","line":43,"column":15,"nodeType":"208","messageId":"209","endLine":43,"endColumn":33},{"ruleId":"206","severity":1,"message":"221","line":43,"column":34,"nodeType":"208","messageId":"209","endLine":43,"endColumn":42},{"ruleId":"206","severity":1,"message":"222","line":84,"column":11,"nodeType":"208","messageId":"209","endLine":84,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":33,"column":23,"nodeType":"225","messageId":"226","endLine":33,"endColumn":32,"fix":"227"},{"ruleId":"213","severity":1,"message":"228","line":58,"column":8,"nodeType":"215","endLine":58,"endColumn":10,"suggestions":"229"},{"ruleId":"213","severity":1,"message":"230","line":66,"column":8,"nodeType":"215","endLine":66,"endColumn":10,"suggestions":"231"},{"ruleId":"213","severity":1,"message":"232","line":79,"column":28,"nodeType":"208","endLine":79,"endColumn":32},{"ruleId":"213","severity":1,"message":"233","line":25,"column":7,"nodeType":"215","endLine":25,"endColumn":14,"suggestions":"234"},{"ruleId":"213","severity":1,"message":"235","line":32,"column":7,"nodeType":"215","endLine":32,"endColumn":9,"suggestions":"236"},{"ruleId":"206","severity":1,"message":"237","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"206","severity":1,"message":"238","line":1,"column":9,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"239","line":1,"column":14,"nodeType":"208","messageId":"209","endLine":1,"endColumn":23},{"ruleId":"206","severity":1,"message":"240","line":1,"column":35,"nodeType":"208","messageId":"209","endLine":1,"endColumn":43},{"ruleId":"206","severity":1,"message":"241","line":1,"column":44,"nodeType":"208","messageId":"209","endLine":1,"endColumn":52},{"ruleId":"206","severity":1,"message":"242","line":1,"column":58,"nodeType":"208","messageId":"209","endLine":1,"endColumn":63},{"ruleId":"206","severity":1,"message":"243","line":1,"column":64,"nodeType":"208","messageId":"209","endLine":1,"endColumn":68},{"ruleId":"206","severity":1,"message":"244","line":1,"column":69,"nodeType":"208","messageId":"209","endLine":1,"endColumn":74},{"ruleId":"206","severity":1,"message":"245","line":1,"column":75,"nodeType":"208","messageId":"209","endLine":1,"endColumn":78},{"ruleId":"206","severity":1,"message":"246","line":1,"column":79,"nodeType":"208","messageId":"209","endLine":1,"endColumn":85},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'ConfigProvider' is defined but never used.","'zhCN' is defined but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newsList'. Either include it or remove the dependency array. You can also do a functional update 'setNewsList(n => ...)' if you only need 'newsList' in the 'setNewsList' call.","ArrayExpression",["247"],["248"],"Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'queryUserInfoAsync' is assigned a value but never used.","'navigate' is assigned a value but never used.","'submit' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"249","text":"250"},"React Hook useEffect has missing dependencies: 'handleStyle', 'link', and 'params.id'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["252"],"Assignments to the 'userInfo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useMemo has an unnecessary dependency: 'today'. Either exclude it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'info' and 'queryUserInfoAsync'. Either include them or remove the dependency array.",["254"],"'connect' is defined but never used.","'take' is defined but never used.","'takeEvery' is defined but never used.","'throttle' is defined but never used.","'debounce' is defined but never used.","'apply' is defined but never used.","'fork' is defined but never used.","'delay' is defined but never used.","'put' is defined but never used.","'select' is defined but never used.",{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},[1179,1179],"()",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [newsList]",{"range":"266","text":"267"},{"range":"268","text":"267"},"Update the dependencies array to be: [handleStyle, link, params.id]",{"range":"269","text":"270"},"Update the dependencies array to be: [params.id]",{"range":"271","text":"272"},"Update the dependencies array to be: []",{"range":"273","text":"274"},"Update the dependencies array to be: [info, queryUserInfoAsync]",{"range":"275","text":"276"},[1126,1128],"[newsList]",[1963,1965],[1924,1926],"[handleStyle, link, params.id]",[2142,2144],"[params.id]",[654,661],"[]",[794,796],"[info, queryUserInfoAsync]"]