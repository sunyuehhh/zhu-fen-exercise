export interface IConfiguration {
    readonly rootValue: number;
    readonly unitPrecision: number;
    readonly minPixelValue: number;
    readonly multiplier: number;
    readonly tags: ReadonlyArray<string>;
    readonly propWhiteList: ReadonlyArray<string>;
    readonly propBlackList: ReadonlyArray<string>;
    readonly exclude: boolean;
    readonly selectorBlackList: ReadonlyArray<string>;
    readonly ignoreIdentifier: boolean;
    readonly replace: boolean;
    readonly mediaQuery: boolean;
    readonly transformRuntime: boolean;
}
export declare class ConfigurationManager {
    private static readonly defaultConfiguration;
    private _config;
    get config(): IConfiguration;
    updateConfig(config?: Partial<IConfiguration>): void;
}
declare const _default: ConfigurationManager;
export default _default;
