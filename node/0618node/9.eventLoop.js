// 进程
// 进程是系统进行分配资源的最小单位,  每个进程都是独立的  但是可以通过进程通信  做到进程间的交互

// 浏览器就是一个多进程模型   对于浏览器而言，每个页签都是一个进程
// 好处就是安全  网页独立挂了之后不影响其他人   隔离不能相互访问

// 浏览器的组成
// 浏览器的主要进程   主要负责管理我们的界面
// 网络进程  发请求  ajax  资源的加载
// 插件进程
// GPU进程   处理图形  加快图形的处理速度
// 渲染进程(每个页面都有自己的渲染进程)



// 进程中我们在关心的就是线程
// js是单线程的？   主线程是单线程的 (JS引擎线程+渲染线程是互斥的)  webworker是不能操作dom元素的
// 网络线程   事件触发线程(调度异步任务)   EventLoop  (定时器，事件  都会产生对应的线程)

// EventLoop
// 任务也是具备优先级的
// 宏任务:(浏览器提供的)脚本实行  ui渲染  定时器  请求  事件   MessageChannel  SetImmediate(ie独有)  
// 微任务:(语言提供的就是微任务)  promise.then   mutationObserver(h5提供)   queueMicrotask
// 默认会拿出一个宏任务来执行，宏任务执行的时候会产生微任务  当宏任务执行完毕后会清空所有的微任务。每次执行一个宏任务 一个微任务

// 队列：浏览器默认有多个宏任务队列。但是我们只关心event loop中调用的逻辑，所以我们通常会说有一个宏任务队列
// 微任务是每次执行宏任务的时候  就会产生一个微任务队列  

// (requestAnimation ui渲染  requestIDleback) 网上说是宏任务  (和浏览器渲染相关，我们称之为钩子)

